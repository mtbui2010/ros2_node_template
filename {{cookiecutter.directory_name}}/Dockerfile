#################### Pull nvidia docker image from dockerhub
FROM nvidia/cuda:11.1.1-devel-ubuntu20.04
ENV TZ=Asia/Seoul
ENV WORK_DIR=/root/ros2_ws
ARG PKG_DIR=/media/keti/workdir/projects

RUN mkdir -p $PKG_DIR
#################### Install ubuntu env and utils
# Set timezone
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
# Make dir shared with host PC
# RUN mkdir $WORKSPACE
# Make dir where apps will be installed
# RUN mkdir apps
# install utils
RUN apt-get update
RUN apt-get install python3.8 -y
RUN ln -s /usr/bin/python3.8 /usr/bin/python3
RUN apt-get install python3-pip -y
RUN pip install --upgrade pip
RUN apt-get install git net-tools iputils-ping nano -y

#################### Install package dependencies
RUN apt-get install ffmpeg libsm6 libxext6  -y
RUN python3 -m pip install opencv-python==4.5.5.64 numpy==1.22.4 pyrealsense2 gdown imutils scikit-learn scikit-image Cython==0.29.33 Pillow==9.5.0

RUN python3 -m pip install detectron2 -f  https://dl.fbaipublicfiles.com/detectron2/wheels/cu111/torch1.10/index.html
RUN python3 -m pip install torch==1.10.1+cu111 torchvision==0.11.2+cu111 torchaudio==0.10.1 -f https://download.pytorch.org/whl/cu111/torch_stable.html

#################### Install ROS2
# Install prerequisites
RUN apt update && apt install -y \
    curl \
    gnupg2 \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*
# Add the ROS 2 repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - \
    && sh -c 'echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
# Install ROS 2 base
RUN apt update && apt install -y \
    ros-foxy-ros-base \
    ros-foxy-cv-bridge \
    python3-colcon-common-extensions \
    python3-pip \
    python3-rosdep \
    && rm -rf /var/lib/apt/lists/*
# Initialize rosdep
RUN rosdep init  && rosdep update
# Source ROS 2 setup script
RUN echo "source /opt/ros/foxy/setup.bash" >> /root/.bashrc
# Create ROS 2 workspace
RUN mkdir -p $WORK_DIR/src
# Set the working directory
WORKDIR $WORK_DIR
# Build the workspace
RUN /bin/bash -c "source /opt/ros/foxy/setup.bash && colcon build"
# Source the workspace setup script
RUN echo "source /root/ros2_ws/install/local_setup.bash" >> /root/.bashrc
CMD ["/bin/bash"]
# alias
RUN echo "alias source_ros2='source /opt/ros/foxy/setup.bash'" >> /root/.bashrc
RUN echo "alias source_ros2_setup='source ~/ros2_ws/install/setup.bash'" >> /root/.bashrc
RUN echo "alias source_bashrc='source ~/.bashrc'" >> /root/.bashrc